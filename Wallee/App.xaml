<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Wallee"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" x:Class="Wallee.App"
    StartupUri="Windows/WindowMain.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <ResourceDictionary Source="pack://application:,,,/StyleFluentWpf;component/Themes/Color.xaml" />
                <ResourceDictionary Source="pack://application:,,,/StyleFluentWpf;component/Themes/Font.xaml" />
                <ResourceDictionary Source="pack://application:,,,/StyleFluentWpf;component/Themes/Generic.xaml" />

                <ResourceDictionary Source="Styles/Colors.xaml" />
                <ResourceDictionary Source="Styles/StyleWindow.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2" SnapsToDevicePixels="True"
                                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                   StrokeThickness="1" StrokeDashArray="1 2" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground"
                        Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground"
                        Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="White" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="16,4" />
                <Setter Property="Height" Value="32" />
                <Setter Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="False" />
                <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value="0.4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <AdornerDecorator
                                    CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                    <Grid>
                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}" CornerRadius="2">
                                            <Border.Effect>
                                                <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)"
                                                         RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <materialDesign:ShadowConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </Border.Effect>
                                        </Border>
                                        <ProgressBar x:Name="ProgressBar"
                                                     Background="{Binding (materialDesign:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                                     Foreground="{Binding (materialDesign:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}"
                                                     HorizontalAlignment="Left" Height="{TemplateBinding Height}"
                                                     IsIndeterminate="{Binding (materialDesign:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}"
                                                     Maximum="{Binding (materialDesign:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}"
                                                     Minimum="{Binding (materialDesign:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}"
                                                     Opacity="{Binding (materialDesign:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}"
                                                     Style="{DynamicResource MaterialDesignLinearProgressBar}"
                                                     Value="{Binding (materialDesign:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                                     VerticalAlignment="Center"
                                                     Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ButtonBase}}}">
                                            <ProgressBar.Visibility>
                                                <Binding
                                                    Path="(materialDesign:ButtonProgressAssist.IsIndicatorVisible)"
                                                    RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <BooleanToVisibilityConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </ProgressBar.Visibility>
                                        </ProgressBar>
                                    </Grid>
                                </AdornerDecorator>
                                <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}"
                                                       Content="{TemplateBinding Content}"
                                                       ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                       Focusable="False"
                                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       Padding="{TemplateBinding Padding}"
                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border"
                                            Value="True" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border"
                                            Value="True" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.23" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>